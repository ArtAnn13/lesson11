/* 
&display=swap
&subset=cyrillic-ext 
*/

/* ОБНУЛЕНИЕ СТИЛЕЙ */
@import url(https://fonts.googleapis.com/css?family=Roboto:100,100italic,300,300italic,regular,italic,500,500italic,700,700italic,900,900italic&display=swap&subset=cyrillic-ext );
*,
*::before,
*::after {
	margin: 0;
	padding: 0;
	border: 0;
	box-sizing: border-box;
}
li {
	list-style: none;
}
a,
a:visited {
	text-decoration: none;
}
a:hover {
	text-decoration: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
	font-weight: inherit;
	font-size: inherit;
}
img {
	vertical-align: top;
}
html,
body {
	height: 100%;
}
html {
	font-size: 16px; /* по умолчанию */
}
body {
	line-height: 1;
	/* color: #000; */
	/* font-family:""; */
	overflow-x: hidden;
	/* font-family: Arial, "Helvetica Neue", Helvetica, sans-serif; */
	font-family: Roboto;
}
.wrapper {
	min-height: 100%;
}
/* ------------------------------ */


.first-block{
	background:  url(/Lesson_11/Lesson_11/Lesson_11/img/bg/Blob\ 2\ \(1\).png)  0 248px no-repeat, #5D62B5;
	border-radius: 40px;
	padding-top: 95px;

width: 1134.17px;

	


}
.main__margin {
	margin: 150px 209px 390px 196px;

}
.about{
	
}
.about__overline{
	text-transform: uppercase;
	font-style: normal;
	font-weight: 700;
	font-size: 12px;
	line-height: 24px;
	color: #F5F5F5;
	background: url(/Lesson_11/Lesson_11/Lesson_11/img/bg/Overline\ Mark\ \(1\).png) 0 center / 17px no-repeat;
	padding: 0px 0px 0px 20px;
	margin: 0px 497px 33px 87px;
	
	}


.about__title{
	
	font-style: normal;
	font-weight: 900;
	font-size: 36px;
	line-height: 42px;
	color: #FFFFFF;
	margin: 0px 350px 36px 87px;


}
.first-block__text{
	font-style: normal;
	font-weight: 400;
	font-size: 16px;
	line-height: 24px;
	letter-spacing: 0.15px;
	color: #F5F5F5;
	margin: 0px 87px 0px 87px;


}
.first-block__image{
	width: 846px;
	height: 420px;
	
}
.first-block__image_margin{
	margin: 61px 87px -115px 87px;

}
.main__icon_position{
	position: absolute;
	top: 35px;
	left: 1206px;
}



.second-block{
	background: url(/Lesson_11/Lesson_11/Lesson_11/img/secondblock/bg/Blob\ 2\ \(1\).png) 629px 0  no-repeat,#29C3BE;
	width: 1440px;
	padding-top: 112px;


}
.second-block__image{
width: 498px;
height: 336px;
border-radius: 40px;
}
.second-block__image_position{
	position: absolute;
left: 732px;
bottom: -367px;
/* left: 498px;
top: -15px; */

} 

.all-blocks{
display: inline-block;
}
.state-block{
	
	width: 237px;
	height: 76px;


}
.state-block__image{

}
.state-block__number{
	font-family: 'Roboto';
font-style: normal;
font-weight: 900;
font-size: 36px;
line-height: 42px;
color: #FFFFFF;

}
.state-block__text{
	font-family: 'Roboto';
font-style: normal;
font-weight: 700;
font-size: 16px;
line-height: 24px;
letter-spacing: 0.15px;
color: #5D62B5;

}

.appt-cta{

}
.appt-cta__text{

}
.appt-cta__button{

}
 .rectangle{

 }


















/*.block {
	 По умолчанию */
	/* position: static; */
	/*
	top
	left 
	right
	bottom
	z-index
	
}*/
/* .block__item {
	padding: 15px;
	color: #fff;
	font-size: 20px;
}
.block__item_color-brown {
	background-color: #794f45;
}
.block__item_color-purple {
	background-color: #77608d;
}
.block__item_color-green {
	background-color: #7a956b;
} */

/* -------------- */

/* Статичное положение объекта (по умолчанию) */
/* top,left,right,bottom,z-index - не работают */
/* position: static; */

/* -------------- */

/*
Положение элемента устанавливается относительно 
его исходного положения в коде. 
Добавление свойств left, top, right и bottom изменяет 
позицию элемента и сдвигает его в ту или иную сторону 
от первоначального расположения.
*/
/* top,left,right,bottom,z-index - работают */
/* position: relative; */

/* -------------- */
/*
Элемент якобы вырывается из кода и зависайт в воздухе. 
Он перестает влиять на остальные элементы. 
Добавление свойств left, top, right и bottom 
изменяет позицию элемента и сдвигает его 
в ту или иную сторону относительно родителя 
у колого задан параметр position: relative;

1) Объект теряет свое "тело", и зависает в воздухе.
2) Другие объекты занимают его место
3) Объект превращается в строчный, тоесть 
размер зависит от контента в нем
4) Объект позиционируется обносительно первого родителя,
для которого указано position: relative;
5) Необходимо сопровождать свойствами top,left,right,bottom

*/
/* top,left,right,bottom,z-index - работают */
/* position: absolute; */

/* -------------- */

/*
Элемент якобы вырывается из кода и зависайт в воздухе. 
Фиксируется, то есть не скролится вместе с содержимым. 
Он перестает влиять на остальные элементы. 
Добавление свойств left, top, right и bottom изменяет позицию элемента 
и сдвигает его в ту или иную сторону относительно окна браузера.
*/

/*
1) Объект теряет свое "тело", и зависает в воздухе.
2) Другие объекты занимают его место
3) Объект превращается в строчный, тоесть 
размер зависит от контента в нем
4) Объект позиционируется обносительно окна браузера
5) Необходимо сопровождать свойствами top,left,right,bottom

*/

/* top,left,right,bottom,z-index - работают */
/* position: fixed; */

/* -------------- */

/*
Это гибридное сочетание значений static и fixed. 
Изначально єлемент ведет себя как static 
но после того как скролл доходит до его границы он становиться 
fixed и прилипает к указанной позиции top или bottom.
*/

/* top,left,right,bottom,z-index - работают */
/* position: sticky; */

/* -------------- */

/*
Каждый элемент может находиться как ниже, 
так и выше других объектов веб-страницы, 
их размещением по z-оси и управляет z-index. 
Это свойство работает только для элементов, 
у которых значение position отличное от static.
*/

/* z-index: auto; */

/* -------------- */
/*
 Свойства позиционирования,
можно указавать px, %, другие ед.
top
left
right
bottom
*/

/* -------------- */

/* Практика */
/*
.list {
}
.list__item {
	position: relative;
	padding: 0px 0px 0px 25px;
}
.list__item::before {
	content: "";
	background: url("../img/icon.png") 0 0 no-repeat;
	width: 25px;
	height: 25px;
	position: absolute;
	top: -6px;
	left: 0px;
}
.list__item:not(:last-child) {
	margin: 0px 0px 10px 0px;
}
.header {
	background-color: #7a956b;
	padding: 20px;
	position: fixed;
	width: 100%;
	top: 0;
	left: 0;
	z-index: 100;
}
.main {
	padding: 30px 0px 0px 0px;
}
.image {
	position: relative;
	display: inline-block;
}
.image::before {
	content: "";
	position: absolute;
	width: 100%;
	height: 100%;
	top: 0;
	left: 0;
	background-color: rgba(0, 0, 0, 0.5);
}
.image:hover::before {
	opacity: 0;
}
.image__item {
	width: 200px;
}
*/

/* .test {
	background: #f5f5f5;
	padding: 110px 30px;
	position: relative;
	background: url("../img/blob.png") right -489px no-repeat;
} */
